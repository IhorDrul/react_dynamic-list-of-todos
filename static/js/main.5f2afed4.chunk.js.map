{"version":3,"sources":["components/TodoList/TodoList.jsx","api/todos.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","initialTodos","props","todos","filter","todo","title","userId","state","filteredTodos","searchValue","defaultSelectValue","searchByTitle","event","searchWorld","target","value","toLowerCase","setState","includes","showComplete","toLocaleLowerCase","completed","showActive","showAll","handleSelectChange","shuffle","shuffleData","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","selectUser","this","className","TextField","id","label","variant","onChange","FormControl","InputLabel","Select","labelId","MenuItem","Button","type","onClick","color","map","classNames","key","readOnly","checked","React","Component","getData","url","fetch","then","response","json","result","data","getTodos","getUser","CurrentUser","currentUser","getCurrentUser","a","user","prevProps","name","email","phone","removeUser","PureComponent","App","selectedUserId","todosFromApi","CircularProgress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f2afed4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  initialTodos = this.props.todos\n    .filter(todo => todo.title && todo.userId);\n\n  state = {\n    filteredTodos: this.initialTodos,\n    searchValue: '',\n    defaultSelectValue: 'All',\n  }\n\n  searchByTitle = (event) => {\n    const searchWorld = event.target.value.toLowerCase();\n\n    this.setState({\n      searchValue: event.target.value,\n      filteredTodos: [...this.initialTodos]\n        .filter(todo => todo.title.toLowerCase().includes(searchWorld)),\n    });\n  }\n\n  showComplete = (event) => {\n    const { searchValue } = this.state;\n    const searchWorld = searchValue.toLocaleLowerCase();\n\n    this.setState({\n      defaultSelectValue: event.target.value,\n      filteredTodos: this.initialTodos\n        .filter(todo => (\n          todo.completed && todo.title.toLowerCase().includes(searchWorld)\n        )),\n    });\n  }\n\n  showActive = (event) => {\n    const { searchValue } = this.state;\n    const searchWorld = searchValue.toLocaleLowerCase();\n\n    this.setState({\n      defaultSelectValue: event.target.value,\n      filteredTodos: this.initialTodos\n        .filter(todo => (\n          !todo.completed && todo.title.toLowerCase().includes(searchWorld)\n        )),\n    });\n  }\n\n  showAll = (event) => {\n    const { searchValue } = this.state;\n    const searchWorld = searchValue.toLocaleLowerCase();\n\n    this.setState({\n      defaultSelectValue: event.target.value,\n      filteredTodos: this.initialTodos\n        .filter(todo => todo.title.toLowerCase().includes(searchWorld)),\n    });\n  }\n\n  handleSelectChange = (event) => {\n    const { value } = event.target;\n\n    if (value === 'Complete') {\n      this.showComplete(event);\n    }\n\n    if (value === 'Active') {\n      this.showActive(event);\n    }\n\n    if (value === 'All') {\n      this.showAll(event);\n    }\n  }\n\n  shuffle = () => {\n    const { filteredTodos } = this.state;\n    const shuffleData = [...filteredTodos];\n    let currentIndex = shuffleData.length - 1;\n\n    while (currentIndex !== 0) {\n      const randomIndex = Math.floor(Math.random() * (currentIndex - 1));\n      const temporaryValue = shuffleData[currentIndex];\n\n      shuffleData[currentIndex] = shuffleData[randomIndex];\n      shuffleData[randomIndex] = temporaryValue;\n      currentIndex -= 1;\n    }\n\n    this.setState({ filteredTodos: shuffleData });\n  }\n\n  render() {\n    const { selectUser } = this.props;\n    const {\n      filteredTodos,\n      searchValue,\n      defaultSelectValue,\n    } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>{`Todos: ${filteredTodos.length}`}</h2>\n        <form className=\"TodoList__form\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Search by title\"\n            variant=\"outlined\"\n            value={searchValue}\n            onChange={this.searchByTitle}\n          />\n          <FormControl variant=\"outlined\">\n            <InputLabel\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Show Todos\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={defaultSelectValue}\n              onChange={this.handleSelectChange}\n              label=\"Show Todos\"\n            >\n              <MenuItem value=\"Complete\">Completed</MenuItem>\n              <MenuItem value=\"Active\">Active</MenuItem>\n              <MenuItem value=\"All\">All</MenuItem>\n            </Select>\n          </FormControl>\n          <Button\n            type=\"button\"\n            onClick={this.shuffle}\n            variant=\"outlined\"\n            color=\"secondary\"\n          >\n            Randomize!!!\n          </Button>\n        </form>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            { filteredTodos.map(todo => (\n              <li\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{ todo.title }</p>\n                </label>\n\n                <button\n                  className=\"\n                    TodoList__user-button\n                    TodoList__user-button--selected\n                    button\n                  \"\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            )) }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      completed: PropTypes.bool,\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number,\n      createdAt: PropTypes.string.isRequired,\n      title: PropTypes.string,\n\n    }).isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const TODOS_API = 'https://mate-api.herokuapp.com/todos';\nconst USERS_API = 'https://mate-api.herokuapp.com/users';\n\nconst getData = url => (\n  fetch(url)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n\nexport const getTodos = () => getData(TODOS_API);\nexport const getUser = userId => getData(`${USERS_API}/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api/todos';\n\nexport class CurrentUser extends React.PureComponent {\n  state = {\n    currentUser: {},\n  }\n\n  componentDidMount() {\n    this.getCurrentUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      this.getCurrentUser();\n    }\n  }\n\n  getCurrentUser = async() => {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ currentUser: user });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      currentUser\n        ? (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected user: ${currentUser.id}`}</span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n            <p className=\"CurrentUser__email\">{currentUser.email}</p>\n            <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n            <div className=\"CurrentUser__clear\">\n              <Button\n                color=\"primary\"\n                onClick={this.props.removeUser}\n              >\n                Clear information\n              </Button>\n            </div>\n          </div>\n        )\n        : <h1 className=\"CurrentUser__error\">Can not find user</h1>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  removeUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getTodos } from './api/todos';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  selectUser = (id) => {\n    this.setState({\n      selectedUserId: id,\n    });\n  }\n\n  getData = async() => {\n    const todosFromApi = await getTodos();\n\n    this.setState({ todos: todosFromApi });\n  }\n\n  removeUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {\n            todos.length === 0\n              ? <CircularProgress />\n              : (\n                <TodoList\n                  todos={todos}\n                  selectUser={this.selectUser}\n                />\n              )\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                removeUser={this.removeUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}